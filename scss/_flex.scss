//Make a container flexy
.flex {
	display: flex;
}

//Stack flexy children on top of each other
.stack {
	flex-direction: column;
}

//Unstack and stack flexy children @ specified viewports
@media (min-width: 384px) {
	.stack-384 {
		flex-direction: column;
	}
	.unstack-384 {
		flex-direction: row;
	}
}
@media (min-width: 768px) {
	.stack-768 {
		flex-direction: column;
	}
	.unstack-768 {
		flex-direction: row;
	}
}
@media (min-width: 1024px) {
	.stack-1024 {
		flex-direction: column;
	}
	.unstack-1024 {
		flex-direction: row;
	}
}
@media (min-width: 1280px) {
	.stack-1280 {
		flex-direction: column;
	}
	.unstack-1280 {
		flex-direction: row;
	}
}
@media (min-width: 1440px) {
	.stack-1440 {
		flex-direction: column;
	}
	.unstack-1440 {
		flex-direction: row;
	}
}

//Align direct children inside of their flexy parent containers
.child {
	@at-root #{&}-main {
		@at-root #{&}-start {
			justify-content: flex-start;
		}
		@at-root #{&}-center {
			justify-content: center;
		}
		@at-root #{&}-end {
			justify-content: flex-end;
		}
		@at-root #{&}-space-between {
			justify-content: space-between;
		}
		@at-root #{&}-space-around {
			justify-content: space-around;
		}
	}
	@at-root #{&}-cross {
		@at-root #{&}-start {
			align-items: flex-start;
		}
		@at-root #{&}-center {
			align-items: center;
		}
		@at-root #{&}-end {
			align-items: flex-end;
		}
		@at-root #{&}-stretch {
			align-items: stretch;
		}
	}
}


//Make flexy children grow to fill as much of their parent container along main axis as possible
.grow {
	flex: 1;
	height: auto;
}