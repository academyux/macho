//Make a container flexy
.flex {
	display: flex;
}

//Stack flexy children on top of each other
.stack {
	flex-direction: column;
}

//Unstack and stack flexy children @ specified viewports
.stack-384 {
	flex-direction: column;
}
.unstack-384 {
	flex-direction: row;
}
.stack-768 {
	flex-direction: column;
}
.unstack-768 {
	flex-direction: row;
}
.stack-1024 {
	flex-direction: column;
}
.unstack-1024 {
	flex-direction: row;
}
.stack-1280 {
	flex-direction: column;
}
.unstack-1280 {
	flex-direction: row;
}
.stack-1440 {
	flex-direction: column;
}
.unstack-1440 {
	flex-direction: row;
}

//Make flexy children fluid columns with 1em gutters
.flex-grid {
	margin-left: 0.5em;
	margin-right: 0.5em;
	> * {
		flex: 1;
		margin-left: 0.5em;
		margin-right: 0.5em;
	}
}

//Align inner-most children inside of their flexy parent containers
.child {
	@at-root #{&}-main {
		@at-root #{&}-start {
			justify-content: flex-start;
		}
		@at-root #{&}-center {
			justify-content: center;
		}
		@at-root #{&}-end {
			justify-content: flex-end;
		}
		@at-root #{&}-space-between {
			justify-content: space-between;
		}
		@at-root #{&}-space-around {
			justify-content: space-around;
		}
	}
	@at-root #{&}-cross {
		@at-root #{&}-start {
			align-items: flex-start;
		}
		@at-root #{&}-center {
			align-items: center;
		}
		@at-root #{&}-end {
			align-items: flex-end;
		}
		@at-root #{&}-stretch {
			align-items: stretch;
		}
	}
}


//Make flexy children fluid
.grow {
	flex: 1;
	height: auto;
}